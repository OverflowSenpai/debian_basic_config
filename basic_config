#!/bin/bash

#===============================
#====== Var declarations =======
#===============================
RED='\033[0;31m'
YELLOW='\033[1;33m'
GREEN='\033[0;32m'
NC='\033[0m'

#========================
#====== Functions =======
#========================
paket_installation () {
  apt install apt-transport-https -y
  apt install ca-certificates -y
  apt install curl -y
  apt install htop -y
  apt install net-tools -y
  apt install openssh-server -y
}

ssh_server_config () {
    printf "${YELLOW}Do you want to configure the SSH Server? [y/n]:${NC} "
    read CHAR_DESISSION_SSHSERVER

    if [ $CHAR_DESISSION_SSHSERVER == "y" ]; then
      printf "${YELLOW}Which port do you want to use? [1025-65535]:${NC} "
      read INT_SSHPORT

      while [ $INT_SSHPORT -gt 65535 ] || [ $INT_SSHPORT -lt 1025 ]; do
        printf "${RED}Port not in Range [1025-65535]!${NC}\n"
        printf "${YELLOW}Which port do you want to use? [1025-65535]:${NC} "
        read INT_SSHPORT
      done

      if [ $INT_SSHPORT -ge 1025 ] && [ $INT_SSHPORT -le 65535 ]; then
        printf "${GREEN}Setting up SSH-Server ...${NC}\n"
        echo -e "\n\n#=======================\n#Custom Config\n#=======================\n" >> /etc/ssh/sshd_config
        echo "Port $INT_SSHPORT" >> /etc/ssh/sshd_config
        echo "LoginGracetime 30" >> /etc/ssh/sshd_config
        echo "PermitRootLogin no" >> /etc/ssh/sshd_config
        echo "StrictModes yes" >> /etc/ssh/sshd_config
        echo "MaxAuthTries 3" >> /etc/ssh/sshd_config
        echo "MaxSessions 3" >> /etc/ssh/sshd_config
      fi
    fi
}

timezone_config () {
  printf "${YELLOW}Do you want to change your Timezone? [y/n]:${NC} "
  read CHAR_DESISSION_TIMEZONE

  if [ $CHAR_DESISSION_TIMEZONE == "y" ]; then
    dpkg-reconfigure tzdata
  fi
}

bashrc_root () {
  rm -f ~/.bashrc
  touch ~/.bashrc
  echo -e "#==========================\n#Custom .bashrc for root\n#==========================\n" >> ~/.bashrc
  echo "force_color_prompt=yes" >> ~/.bashrc
  echo "HISTCONTROL=ignoreboth" >> ~/.bashrc
  echo "HISTSIZE=500" >> ~/.bashrc
  echo "HISTFILESIZE=1000" >> ~/.bashrc
  echo "shopt -s histappend histreedit histverify" >> ~/.bashrc
  echo "shopt -s checkwinsize" >> ~/.bashrc
  echo "PS1='\[\033[01;31m\][\[\033[01;33m\]\t\[\033[01;31m\]]─[\[\033[0;31m\]\u\[\033[01;33m\]@\[\033[01;96m\]\h\[\033[01;31m\]]─[\[\033[0;32m\]\w\[\033[01;31m\]]\[\033[38;5;15m\]\n\[\033[01;31m\]\\$\[\033[01;33m\]: \[\033[0;255m\]'" >> ~/.bashrc
  echo "alias ls='ls -h --color=auto'" >> ~/.bashrc
  echo "alias grep='grep --color=auto'" >> ~/.bashrc
  echo "alias mkdir='mkdir -p'" >> ~/.bashrc
  echo "alias h='history'" >> ~/.bashrc
  echo "alias hc='history -c'" >> ~/.bashrc
  echo "alias ..='cd ..'" >> ~/.bashrc
}

bashrc_nonroot () {
  rm -f ~/.bashrc
  touch ~/.bashrc
  echo -e "#==========================\n#Custom .bashrc for non-root\n#==========================\n" >> ~/.bashrc
  echo "force_color_prompt=yes" >> ~/.bashrc
  echo "HISTCONTROL=ignoreboth" >> ~/.bashrc
  echo "HISTSIZE=500" >> ~/.bashrc
  echo "HISTFILESIZE=1000" >> ~/.bashrc
  echo "shopt -s histappend histreedit histverify" >> ~/.bashrc
  echo "shopt -s checkwinsize" >> ~/.bashrc
  echo "PS1='\[\033[01;31m\][\[\033[01;33m\]\t\[\033[01;31m\]]─[\[\033[0;92m\]\u\[\033[01;33m\]@\[\033[01;96m\]\h\[\033[01;31m\]]─[\[\033[0;32m\]\w\[\033[01;31m\]]\[\033[38;5;15m\]\n\[\033[01;31m\]\\$\[\033[01;33m\]: \[\033[0;255m\]'" >> ~/.bashrc
  echo "alias ls='ls -h --color=auto'" >> ~/.bashrc
  echo "alias grep='grep --color=auto'" >> ~/.bashrc
  echo "alias mkdir='mkdir -p'" >> ~/.bashrc
  echo "alias h='history'" >> ~/.bashrc
  echo "alias hc='history -c'" >> ~/.bashrc
  echo "alias ..='cd ..'" >> ~/.bashrc
}

#==================================================
#===================== MAIN =======================
#==================================================

printf "\n${YELLOW}Do you want to start? [y/n]:${NC} "
read CHAR_DESISSION_STARTSCRIPT

if [ $CHAR_DESISSION_STARTSCRIPT == "y" ]; then
  if [ "$(id -u)" -eq "0" ]; then
    printf "${GREEN}Modify .bashrc for root user ...${NC}\n"
    bashrc_root

    printf "${GREEN}Updating Repositories ...${NC}\n"
    apt update

    printf "${GREEN}Installing basic packets ...${NC}\n"
    paket_installation

    printf "${GREEN}Configuring Timezone ...${NC}\n"
    timezone_config

    printf "${GREEN}Configuring SSH-Server ...${NC}\n"
    ssh_server_config

  else
    printf "${GREEN}Modify .bashrc for non-root user ...${NC}\n"
    bashrc_nonroot

  fi
  printf "${GREEN}DONE!${NC}\n"

else
  printf "${GREEN}OK! See you soon :)${NC}\n\n"

fi